//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WISETRACK.Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WISETRACKEntities : DbContext
    {
        public WISETRACKEntities()
            : base("name=WISETRACKEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Alarma> Alarma { get; set; }
        public virtual DbSet<AlarmaDestinatarios> AlarmaDestinatarios { get; set; }
        public virtual DbSet<AlarmaGeocerca> AlarmaGeocerca { get; set; }
        public virtual DbSet<AlarmaVehiculo> AlarmaVehiculo { get; set; }
        public virtual DbSet<Alerta> Alerta { get; set; }
        public virtual DbSet<Alerta2> Alerta2 { get; set; }
        public virtual DbSet<AlertaEmail> AlertaEmail { get; set; }
        public virtual DbSet<Area> Area { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<CategoriaAlarma> CategoriaAlarma { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<EmpresaGPS> EmpresaGPS { get; set; }
        public virtual DbSet<EmpresaIDButton> EmpresaIDButton { get; set; }
        public virtual DbSet<EmpresaVehiculo> EmpresaVehiculo { get; set; }
        public virtual DbSet<EstadoMotor> EstadoMotor { get; set; }
        public virtual DbSet<EstadoPuerta> EstadoPuerta { get; set; }
        public virtual DbSet<Geocerca> Geocerca { get; set; }
        public virtual DbSet<GPS> GPS { get; set; }
        public virtual DbSet<GPSTrama> GPSTrama { get; set; }
        public virtual DbSet<IdButton> IdButton { get; set; }
        public virtual DbSet<IDButtonGps> IDButtonGps { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Nivel> Nivel { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<Persona1> Persona1 { get; set; }
        public virtual DbSet<Privilegios> Privilegios { get; set; }
        public virtual DbSet<Prueba> Prueba { get; set; }
        public virtual DbSet<PuntosGeocerca> PuntosGeocerca { get; set; }
        public virtual DbSet<ReporteTemp> ReporteTemp { get; set; }
        public virtual DbSet<RolesPrivilegios> RolesPrivilegios { get; set; }
        public virtual DbSet<RolNivel> RolNivel { get; set; }
        public virtual DbSet<Seguimiento> Seguimiento { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<TipoAlarma> TipoAlarma { get; set; }
        public virtual DbSet<TipoGeocerca> TipoGeocerca { get; set; }
        public virtual DbSet<TipoPersona> TipoPersona { get; set; }
        public virtual DbSet<TipoVehiculo> TipoVehiculo { get; set; }
        public virtual DbSet<Trama> Trama { get; set; }
        public virtual DbSet<Trama2> Trama2 { get; set; }
        public virtual DbSet<Trama3> Trama3 { get; set; }
        public virtual DbSet<TramaTemp> TramaTemp { get; set; }
        public virtual DbSet<TramaTemp1> TramaTemp1 { get; set; }
        public virtual DbSet<UsuarioEmpresa> UsuarioEmpresa { get; set; }
        public virtual DbSet<UsuarioVehiculo> UsuarioVehiculo { get; set; }
        public virtual DbSet<Vehiculo> Vehiculo { get; set; }
        public virtual DbSet<VehiculoConductor> VehiculoConductor { get; set; }
        public virtual DbSet<EmperaUsu> EmperaUsu { get; set; }
        public virtual DbSet<imei_seguimiento> imei_seguimiento { get; set; }
        public virtual DbSet<per1onAsnet> per1onAsnet { get; set; }
        public virtual DbSet<VerficaEmail> VerficaEmail { get; set; }
        public virtual DbSet<viesPersonaEmpresa> viesPersonaEmpresa { get; set; }
    
        [DbFunction("WISETRACKEntities", "fn_ReporteEntradaSalida")]
        public virtual IQueryable<fn_ReporteEntradaSalida_Result> fn_ReporteEntradaSalida(string listaPlacas, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> codGEO)
        {
            var listaPlacasParameter = listaPlacas != null ?
                new ObjectParameter("listaPlacas", listaPlacas) :
                new ObjectParameter("listaPlacas", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var codGEOParameter = codGEO.HasValue ?
                new ObjectParameter("codGEO", codGEO) :
                new ObjectParameter("codGEO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ReporteEntradaSalida_Result>("[WISETRACKEntities].[fn_ReporteEntradaSalida](@listaPlacas, @DateFrom, @DateTo, @codGEO)", listaPlacasParameter, dateFromParameter, dateToParameter, codGEOParameter);
        }
    
        [DbFunction("WISETRACKEntities", "fn_ReporteKilometraje")]
        public virtual IQueryable<fn_ReporteKilometraje_Result> fn_ReporteKilometraje(string listaPlacas, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var listaPlacasParameter = listaPlacas != null ?
                new ObjectParameter("listaPlacas", listaPlacas) :
                new ObjectParameter("listaPlacas", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ReporteKilometraje_Result>("[WISETRACKEntities].[fn_ReporteKilometraje](@listaPlacas, @DateFrom, @DateTo)", listaPlacasParameter, dateFromParameter, dateToParameter);
        }
    
        [DbFunction("WISETRACKEntities", "fn_ReporteMotorEncendido")]
        public virtual IQueryable<fn_ReporteMotorEncendido_Result> fn_ReporteMotorEncendido(string listaPlacas, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var listaPlacasParameter = listaPlacas != null ?
                new ObjectParameter("listaPlacas", listaPlacas) :
                new ObjectParameter("listaPlacas", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_ReporteMotorEncendido_Result>("[WISETRACKEntities].[fn_ReporteMotorEncendido](@listaPlacas, @DateFrom, @DateTo)", listaPlacasParameter, dateFromParameter, dateToParameter);
        }
    
        [DbFunction("WISETRACKEntities", "fn_SplitString")]
        public virtual IQueryable<fn_SplitString_Result> fn_SplitString(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SplitString_Result>("[WISETRACKEntities].[fn_SplitString](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<enviar_trama_Result> enviar_trama(Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, string placa)
        {
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<enviar_trama_Result>("enviar_trama", fechaIniParameter, fechaFinParameter, placaParameter);
        }
    
        public virtual ObjectResult<enviar_trama2_Result> enviar_trama2(Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, string placa)
        {
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<enviar_trama2_Result>("enviar_trama2", fechaIniParameter, fechaFinParameter, placaParameter);
        }
    
        public virtual int GuardarTramasGV500(string trama)
        {
            var tramaParameter = trama != null ?
                new ObjectParameter("trama", trama) :
                new ObjectParameter("trama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarTramasGV500", tramaParameter);
        }
    
        public virtual int sp_ActualizarTrama3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizarTrama3");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_CrearAlertaAperturaCierre(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaAperturaCierre", idParameter);
        }
    
        public virtual int sp_CrearAlertaAperturaCierreOptimizado(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaAperturaCierreOptimizado", idParameter);
        }
    
        public virtual int sp_CrearAlertaDetMaxima(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaDetMaxima", idParameter);
        }
    
        public virtual int sp_CrearAlertaDetMinima(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaDetMinima", idParameter);
        }
    
        public virtual int sp_CrearAlertaEntrada(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaEntrada", idParameter);
        }
    
        public virtual ObjectResult<sp_CrearAlertaEntradaSalida_Result> sp_CrearAlertaEntradaSalida(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CrearAlertaEntradaSalida_Result>("sp_CrearAlertaEntradaSalida", idParameter);
        }
    
        public virtual int sp_CrearAlertaEntradaSalida123(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaEntradaSalida123", idParameter);
        }
    
        public virtual int sp_CrearAlertaItinerario(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaItinerario", idParameter);
        }
    
        public virtual ObjectResult<sp_CrearAlertas_Result> sp_CrearAlertas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CrearAlertas_Result>("sp_CrearAlertas");
        }
    
        public virtual int sp_CrearAlertaSalida(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaSalida", idParameter);
        }
    
        public virtual ObjectResult<sp_CrearAlertasMod_Result> sp_CrearAlertasMod(Nullable<long> idTrama)
        {
            var idTramaParameter = idTrama.HasValue ?
                new ObjectParameter("idTrama", idTrama) :
                new ObjectParameter("idTrama", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CrearAlertasMod_Result>("sp_CrearAlertasMod", idTramaParameter);
        }
    
        public virtual int sp_CrearAlertasVoltaje(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertasVoltaje", idParameter);
        }
    
        public virtual int sp_CrearAlertaTempMaxima(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaTempMaxima", idParameter);
        }
    
        public virtual int sp_CrearAlertaTempMinima(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaTempMinima", idParameter);
        }
    
        public virtual int sp_CrearAlertaVelMaxima(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrearAlertaVelMaxima", idParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_EjecutarAlertaAperturaCierre()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EjecutarAlertaAperturaCierre");
        }
    
        public virtual int sp_EjecutarAlertaDetencionMaxima()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EjecutarAlertaDetencionMaxima");
        }
    
        public virtual ObjectResult<sp_EjecutarAlertaEntradaSalida_Result> sp_EjecutarAlertaEntradaSalida()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EjecutarAlertaEntradaSalida_Result>("sp_EjecutarAlertaEntradaSalida");
        }
    
        public virtual int sp_EjecutarAlertaSalida()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EjecutarAlertaSalida");
        }
    
        public virtual int sp_EjecutarAlertasEntrada()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EjecutarAlertasEntrada");
        }
    
        public virtual int sp_EjecutarAlertasVelocidadMaxima()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EjecutarAlertasVelocidadMaxima");
        }
    
        public virtual int sp_EjecutarAlertasVoltaje()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EjecutarAlertasVoltaje");
        }
    
        public virtual int sp_EjecutarAlertaTemperaturaMaxima()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EjecutarAlertaTemperaturaMaxima");
        }
    
        public virtual int sp_EjecutarAlertaTemperaturaMinima()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EjecutarAlertaTemperaturaMinima");
        }
    
        public virtual ObjectResult<sp_EnviarAlertas_Result> sp_EnviarAlertas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EnviarAlertas_Result>("sp_EnviarAlertas");
        }
    
        public virtual int sp_EnviarEmail(string profile_name, string recipients, string copy_recipients, string subject, string body)
        {
            var profile_nameParameter = profile_name != null ?
                new ObjectParameter("profile_name", profile_name) :
                new ObjectParameter("profile_name", typeof(string));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("recipients", recipients) :
                new ObjectParameter("recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("copy_recipients", copy_recipients) :
                new ObjectParameter("copy_recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("body", body) :
                new ObjectParameter("body", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EnviarEmail", profile_nameParameter, recipientsParameter, copy_recipientsParameter, subjectParameter, bodyParameter);
        }
    
        public virtual int sp_GenerarReportes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GenerarReportes");
        }
    
        public virtual int sp_GenerarRptAperturaCierre(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GenerarRptAperturaCierre", idParameter);
        }
    
        public virtual int sp_GenerarRptDetencion(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GenerarRptDetencion", idParameter);
        }
    
        public virtual int sp_GenerarRptEntradaSalida(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GenerarRptEntradaSalida", idParameter);
        }
    
        public virtual int sp_generate(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_generate", tableNameParameter);
        }
    
        public virtual int sp_GuardarPrueba(string trama)
        {
            var tramaParameter = trama != null ?
                new ObjectParameter("Trama", trama) :
                new ObjectParameter("Trama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuardarPrueba", tramaParameter);
        }
    
        public virtual int sp_GuardarTrama(string trama)
        {
            var tramaParameter = trama != null ?
                new ObjectParameter("Trama", trama) :
                new ObjectParameter("Trama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuardarTrama", tramaParameter);
        }
    
        public virtual int sp_GuardarTrama124(string trama)
        {
            var tramaParameter = trama != null ?
                new ObjectParameter("Trama", trama) :
                new ObjectParameter("Trama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuardarTrama124", tramaParameter);
        }
    
        public virtual int sp_GuardarTrama3(Nullable<long> iD, Nullable<long> iDTrama, Nullable<int> procesado, Nullable<System.DateTime> fechaReg)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var iDTramaParameter = iDTrama.HasValue ?
                new ObjectParameter("IDTrama", iDTrama) :
                new ObjectParameter("IDTrama", typeof(long));
    
            var procesadoParameter = procesado.HasValue ?
                new ObjectParameter("Procesado", procesado) :
                new ObjectParameter("Procesado", typeof(int));
    
            var fechaRegParameter = fechaReg.HasValue ?
                new ObjectParameter("FechaReg", fechaReg) :
                new ObjectParameter("FechaReg", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuardarTrama3", iDParameter, iDTramaParameter, procesadoParameter, fechaRegParameter);
        }
    
        public virtual int sp_GuardarTramaTRAXS15(string trama)
        {
            var tramaParameter = trama != null ?
                new ObjectParameter("trama", trama) :
                new ObjectParameter("trama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuardarTramaTRAXS15", tramaParameter);
        }
    
        public virtual int sp_GuardarTramaXX(Nullable<long> iD, string iMEI, Nullable<int> estadoGPS, Nullable<decimal> velocidad, Nullable<decimal> asimut, Nullable<double> longitud, Nullable<double> latitud, Nullable<decimal> altitud, string tipoMensaje, string tipoRespuesta, Nullable<int> estadoMotor, Nullable<System.DateTime> fechaGPS, Nullable<System.DateTime> fechaEnvio, Nullable<System.DateTime> fechaReg, string iDButton, Nullable<bool> iDAutorizado, Nullable<double> kilometraje, Nullable<decimal> rPMMotor, Nullable<decimal> consComb, Nullable<decimal> nivelEntradaComb, Nullable<double> temperatura, Nullable<double> voltajeBateria, Nullable<bool> estadoPuerta, Nullable<int> procesado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var iMEIParameter = iMEI != null ?
                new ObjectParameter("IMEI", iMEI) :
                new ObjectParameter("IMEI", typeof(string));
    
            var estadoGPSParameter = estadoGPS.HasValue ?
                new ObjectParameter("EstadoGPS", estadoGPS) :
                new ObjectParameter("EstadoGPS", typeof(int));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("Velocidad", velocidad) :
                new ObjectParameter("Velocidad", typeof(decimal));
    
            var asimutParameter = asimut.HasValue ?
                new ObjectParameter("Asimut", asimut) :
                new ObjectParameter("Asimut", typeof(decimal));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(double));
    
            var latitudParameter = latitud.HasValue ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(double));
    
            var altitudParameter = altitud.HasValue ?
                new ObjectParameter("Altitud", altitud) :
                new ObjectParameter("Altitud", typeof(decimal));
    
            var tipoMensajeParameter = tipoMensaje != null ?
                new ObjectParameter("TipoMensaje", tipoMensaje) :
                new ObjectParameter("TipoMensaje", typeof(string));
    
            var tipoRespuestaParameter = tipoRespuesta != null ?
                new ObjectParameter("TipoRespuesta", tipoRespuesta) :
                new ObjectParameter("TipoRespuesta", typeof(string));
    
            var estadoMotorParameter = estadoMotor.HasValue ?
                new ObjectParameter("EstadoMotor", estadoMotor) :
                new ObjectParameter("EstadoMotor", typeof(int));
    
            var fechaGPSParameter = fechaGPS.HasValue ?
                new ObjectParameter("FechaGPS", fechaGPS) :
                new ObjectParameter("FechaGPS", typeof(System.DateTime));
    
            var fechaEnvioParameter = fechaEnvio.HasValue ?
                new ObjectParameter("FechaEnvio", fechaEnvio) :
                new ObjectParameter("FechaEnvio", typeof(System.DateTime));
    
            var fechaRegParameter = fechaReg.HasValue ?
                new ObjectParameter("FechaReg", fechaReg) :
                new ObjectParameter("FechaReg", typeof(System.DateTime));
    
            var iDButtonParameter = iDButton != null ?
                new ObjectParameter("IDButton", iDButton) :
                new ObjectParameter("IDButton", typeof(string));
    
            var iDAutorizadoParameter = iDAutorizado.HasValue ?
                new ObjectParameter("IDAutorizado", iDAutorizado) :
                new ObjectParameter("IDAutorizado", typeof(bool));
    
            var kilometrajeParameter = kilometraje.HasValue ?
                new ObjectParameter("Kilometraje", kilometraje) :
                new ObjectParameter("Kilometraje", typeof(double));
    
            var rPMMotorParameter = rPMMotor.HasValue ?
                new ObjectParameter("RPMMotor", rPMMotor) :
                new ObjectParameter("RPMMotor", typeof(decimal));
    
            var consCombParameter = consComb.HasValue ?
                new ObjectParameter("ConsComb", consComb) :
                new ObjectParameter("ConsComb", typeof(decimal));
    
            var nivelEntradaCombParameter = nivelEntradaComb.HasValue ?
                new ObjectParameter("NivelEntradaComb", nivelEntradaComb) :
                new ObjectParameter("NivelEntradaComb", typeof(decimal));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(double));
    
            var voltajeBateriaParameter = voltajeBateria.HasValue ?
                new ObjectParameter("VoltajeBateria", voltajeBateria) :
                new ObjectParameter("VoltajeBateria", typeof(double));
    
            var estadoPuertaParameter = estadoPuerta.HasValue ?
                new ObjectParameter("EstadoPuerta", estadoPuerta) :
                new ObjectParameter("EstadoPuerta", typeof(bool));
    
            var procesadoParameter = procesado.HasValue ?
                new ObjectParameter("Procesado", procesado) :
                new ObjectParameter("Procesado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuardarTramaXX", iDParameter, iMEIParameter, estadoGPSParameter, velocidadParameter, asimutParameter, longitudParameter, latitudParameter, altitudParameter, tipoMensajeParameter, tipoRespuestaParameter, estadoMotorParameter, fechaGPSParameter, fechaEnvioParameter, fechaRegParameter, iDButtonParameter, iDAutorizadoParameter, kilometrajeParameter, rPMMotorParameter, consCombParameter, nivelEntradaCombParameter, temperaturaParameter, voltajeBateriaParameter, estadoPuertaParameter, procesadoParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_InsertarTrama3(Nullable<long> imei, Nullable<int> pid)
        {
            var imeiParameter = imei.HasValue ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(long));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarTrama3", imeiParameter, pidParameter);
        }
    
        public virtual ObjectResult<sp_listar_imei_seguimiento_Result> sp_listar_imei_seguimiento(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_imei_seguimiento_Result>("sp_listar_imei_seguimiento", nitParameter);
        }
    
        public virtual ObjectResult<sp_listar_placa_seguimiento_Result> sp_listar_placa_seguimiento(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_placa_seguimiento_Result>("sp_listar_placa_seguimiento", nitParameter);
        }
    
        public virtual int sp_ListarAlarmas(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ListarAlarmas", nitParameter);
        }
    
        public virtual ObjectResult<sp_ListarEmpresa_Result> sp_ListarEmpresa(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarEmpresa_Result>("sp_ListarEmpresa", usernameParameter);
        }
    
        public virtual ObjectResult<sp_ListarFoto_Result> sp_ListarFoto(string placa)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarFoto_Result>("sp_ListarFoto", placaParameter);
        }
    
        public virtual ObjectResult<sp_ListarGeocerca_Result> sp_ListarGeocerca(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarGeocerca_Result>("sp_ListarGeocerca", codParameter);
        }
    
        public virtual ObjectResult<sp_ListarGeocercaAll_Result> sp_ListarGeocercaAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarGeocercaAll_Result>("sp_ListarGeocercaAll");
        }
    
        public virtual ObjectResult<sp_ListarGeocercaEmpresa_Result> sp_ListarGeocercaEmpresa(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarGeocercaEmpresa_Result>("sp_ListarGeocercaEmpresa", nitParameter);
        }
    
        public virtual ObjectResult<sp_listarPersona_Result> sp_listarPersona(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarPersona_Result>("sp_listarPersona", nitParameter);
        }
    
        public virtual ObjectResult<sp_ListarPersonalAsignacionVehiculo_Result> sp_ListarPersonalAsignacionVehiculo(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarPersonalAsignacionVehiculo_Result>("sp_ListarPersonalAsignacionVehiculo", nitParameter);
        }
    
        public virtual ObjectResult<sp_ListarPuntosGeo_Result> sp_ListarPuntosGeo(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarPuntosGeo_Result>("sp_ListarPuntosGeo", codParameter);
        }
    
        public virtual ObjectResult<sp_ListarReporteAuditoriaOptimizado_Result> sp_ListarReporteAuditoriaOptimizado(string fini, string ffin, string placa)
        {
            var finiParameter = fini != null ?
                new ObjectParameter("fini", fini) :
                new ObjectParameter("fini", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("ffin", ffin) :
                new ObjectParameter("ffin", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarReporteAuditoriaOptimizado_Result>("sp_ListarReporteAuditoriaOptimizado", finiParameter, ffinParameter, placaParameter);
        }
    
        public virtual ObjectResult<sp_ListarReporteDetencionesOptimizado_Result> sp_ListarReporteDetencionesOptimizado(string imei, string fini, string ffin)
        {
            var imeiParameter = imei != null ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(string));
    
            var finiParameter = fini != null ?
                new ObjectParameter("fini", fini) :
                new ObjectParameter("fini", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("ffin", ffin) :
                new ObjectParameter("ffin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarReporteDetencionesOptimizado_Result>("sp_ListarReporteDetencionesOptimizado", imeiParameter, finiParameter, ffinParameter);
        }
    
        public virtual ObjectResult<sp_ListarReporteDetencionesOptimizado1_Result> sp_ListarReporteDetencionesOptimizado1(string imei, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var imeiParameter = imei != null ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarReporteDetencionesOptimizado1_Result>("sp_ListarReporteDetencionesOptimizado1", imeiParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<sp_ListarReporteEPuertaOptimizado_Result> sp_ListarReporteEPuertaOptimizado(string imei, string fini, string ffin)
        {
            var imeiParameter = imei != null ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(string));
    
            var finiParameter = fini != null ?
                new ObjectParameter("fini", fini) :
                new ObjectParameter("fini", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("ffin", ffin) :
                new ObjectParameter("ffin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarReporteEPuertaOptimizado_Result>("sp_ListarReporteEPuertaOptimizado", imeiParameter, finiParameter, ffinParameter);
        }
    
        public virtual ObjectResult<sp_ListarSeguimiento_Result> sp_ListarSeguimiento(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarSeguimiento_Result>("sp_ListarSeguimiento", nitParameter);
        }
    
        public virtual ObjectResult<sp_ListarSeguimientoOptimizado_Result> sp_ListarSeguimientoOptimizado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarSeguimientoOptimizado_Result>("sp_ListarSeguimientoOptimizado");
        }
    
        public virtual ObjectResult<sp_ListarSoloPersonalSA_Result> sp_ListarSoloPersonalSA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListarSoloPersonalSA_Result>("sp_ListarSoloPersonalSA");
        }
    
        public virtual ObjectResult<sp_listarTipoGeocerca_Result> sp_listarTipoGeocerca(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarTipoGeocerca_Result>("sp_listarTipoGeocerca", nitParameter);
        }
    
        public virtual ObjectResult<sp_listarVehiculosEmpresa_Result> sp_listarVehiculosEmpresa(string nit)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarVehiculosEmpresa_Result>("sp_listarVehiculosEmpresa", nitParameter);
        }
    
        public virtual ObjectResult<sp_listarVehiculosSA_Result> sp_listarVehiculosSA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarVehiculosSA_Result>("sp_listarVehiculosSA");
        }
    
        public virtual ObjectResult<sp_ListaSeguimientoModificado_Result> sp_ListaSeguimientoModificado(Nullable<int> idtrama)
        {
            var idtramaParameter = idtrama.HasValue ?
                new ObjectParameter("idtrama", idtrama) :
                new ObjectParameter("idtrama", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListaSeguimientoModificado_Result>("sp_ListaSeguimientoModificado", idtramaParameter);
        }
    
        public virtual ObjectResult<sp_obtenerAuditoria_Result> sp_obtenerAuditoria(string fini, string ffin, string placa)
        {
            var finiParameter = fini != null ?
                new ObjectParameter("fini", fini) :
                new ObjectParameter("fini", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("ffin", ffin) :
                new ObjectParameter("ffin", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtenerAuditoria_Result>("sp_obtenerAuditoria", finiParameter, ffinParameter, placaParameter);
        }
    
        public virtual ObjectResult<sp_obtenerAuditoriaOptimizado_Result> sp_obtenerAuditoriaOptimizado(string fini, string ffin, string placa)
        {
            var finiParameter = fini != null ?
                new ObjectParameter("fini", fini) :
                new ObjectParameter("fini", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("ffin", ffin) :
                new ObjectParameter("ffin", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtenerAuditoriaOptimizado_Result>("sp_obtenerAuditoriaOptimizado", finiParameter, ffinParameter, placaParameter);
        }
    
        public virtual ObjectResult<sp_obtenerAuditoriaOptimizado1_Result> sp_obtenerAuditoriaOptimizado1(Nullable<System.DateTime> fini, Nullable<System.DateTime> ffin, string placa)
        {
            var finiParameter = fini.HasValue ?
                new ObjectParameter("fini", fini) :
                new ObjectParameter("fini", typeof(System.DateTime));
    
            var ffinParameter = ffin.HasValue ?
                new ObjectParameter("ffin", ffin) :
                new ObjectParameter("ffin", typeof(System.DateTime));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtenerAuditoriaOptimizado1_Result>("sp_obtenerAuditoriaOptimizado1", finiParameter, ffinParameter, placaParameter);
        }
    
        public virtual ObjectResult<sp_obtenerUltimaPosicion_Result> sp_obtenerUltimaPosicion(string placa)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_obtenerUltimaPosicion_Result>("sp_obtenerUltimaPosicion", placaParameter);
        }
    
        public virtual int sp_ObtenerUltimaPosicionAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ObtenerUltimaPosicionAll");
        }
    
        public virtual int sp_ProcesarAlertas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProcesarAlertas");
        }
    
        public virtual int sp_ProcesarTramas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProcesarTramas");
        }
    
        public virtual int sp_ProcesarTramas20()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProcesarTramas20");
        }
    
        public virtual int sp_ProcesarTramasBUFF(Nullable<int> id, Nullable<long> imei, Nullable<System.DateTime> fechaGPS)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var imeiParameter = imei.HasValue ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(long));
    
            var fechaGPSParameter = fechaGPS.HasValue ?
                new ObjectParameter("fechaGPS", fechaGPS) :
                new ObjectParameter("fechaGPS", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProcesarTramasBUFF", idParameter, imeiParameter, fechaGPSParameter);
        }
    
        public virtual int sp_ProcesarTramasRESP(Nullable<int> id, Nullable<long> imei, Nullable<System.DateTime> fechaGPS)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var imeiParameter = imei.HasValue ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(long));
    
            var fechaGPSParameter = fechaGPS.HasValue ?
                new ObjectParameter("fechaGPS", fechaGPS) :
                new ObjectParameter("fechaGPS", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProcesarTramasRESP", idParameter, imeiParameter, fechaGPSParameter);
        }
    
        public virtual int sp_prueba()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_prueba");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_ReporteEncendidoApagado_Result> sp_ReporteEncendidoApagado(string listPlacas, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var listPlacasParameter = listPlacas != null ?
                new ObjectParameter("listPlacas", listPlacas) :
                new ObjectParameter("listPlacas", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReporteEncendidoApagado_Result>("sp_ReporteEncendidoApagado", listPlacasParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<sp_ReporteEntradaSalida_Result> sp_ReporteEntradaSalida(string listaPlacas, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> codGEO)
        {
            var listaPlacasParameter = listaPlacas != null ?
                new ObjectParameter("listaPlacas", listaPlacas) :
                new ObjectParameter("listaPlacas", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var codGEOParameter = codGEO.HasValue ?
                new ObjectParameter("codGEO", codGEO) :
                new ObjectParameter("codGEO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReporteEntradaSalida_Result>("sp_ReporteEntradaSalida", listaPlacasParameter, dateFromParameter, dateToParameter, codGEOParameter);
        }
    
        public virtual ObjectResult<sp_reporteGeocerca_Result> sp_reporteGeocerca(string cod)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporteGeocerca_Result>("sp_reporteGeocerca", codParameter);
        }
    
        public virtual ObjectResult<sp_ReporteKilometraje_Result> sp_ReporteKilometraje(string listPlacas, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var listPlacasParameter = listPlacas != null ?
                new ObjectParameter("listPlacas", listPlacas) :
                new ObjectParameter("listPlacas", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReporteKilometraje_Result>("sp_ReporteKilometraje", listPlacasParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<sp_reporteSeguimiento_Result> sp_reporteSeguimiento(string placa, string nIT)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var nITParameter = nIT != null ?
                new ObjectParameter("NIT", nIT) :
                new ObjectParameter("NIT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporteSeguimiento_Result>("sp_reporteSeguimiento", placaParameter, nITParameter);
        }
    
        public virtual ObjectResult<sp_reporteSeguimiento1_Result> sp_reporteSeguimiento1(string placa, string nIT)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var nITParameter = nIT != null ?
                new ObjectParameter("NIT", nIT) :
                new ObjectParameter("NIT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporteSeguimiento1_Result>("sp_reporteSeguimiento1", placaParameter, nITParameter);
        }
    
        public virtual ObjectResult<sp_reporteTemperatura_Result> sp_reporteTemperatura(string fini, string ffin, string placa)
        {
            var finiParameter = fini != null ?
                new ObjectParameter("fini", fini) :
                new ObjectParameter("fini", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("ffin", ffin) :
                new ObjectParameter("ffin", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporteTemperatura_Result>("sp_reporteTemperatura", finiParameter, ffinParameter, placaParameter);
        }
    
        public virtual ObjectResult<sp_reporteTemperaturaOptimizado_Result> sp_reporteTemperaturaOptimizado(string fini, string ffin, string placa)
        {
            var finiParameter = fini != null ?
                new ObjectParameter("fini", fini) :
                new ObjectParameter("fini", typeof(string));
    
            var ffinParameter = ffin != null ?
                new ObjectParameter("ffin", ffin) :
                new ObjectParameter("ffin", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporteTemperaturaOptimizado_Result>("sp_reporteTemperaturaOptimizado", finiParameter, ffinParameter, placaParameter);
        }
    
        public virtual ObjectResult<sp_reporteTemperaturaOptimizado1_Result> sp_reporteTemperaturaOptimizado1(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string placa)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporteTemperaturaOptimizado1_Result>("sp_reporteTemperaturaOptimizado1", dateFromParameter, dateToParameter, placaParameter);
        }
    
        public virtual int sp_TodasLasTramas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TodasLasTramas");
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Trama2_Insert(Nullable<int> iD, string iMEI, Nullable<int> estadoGPS, Nullable<double> velocidad, Nullable<double> asimut, Nullable<double> longitud, Nullable<double> latitud, Nullable<double> altitud, string tipoMensaje, string tipoRespuesta, Nullable<int> estadoMotor, Nullable<System.DateTime> fechaGPS, Nullable<System.DateTime> fechaEnvio, Nullable<System.DateTime> fechaReg, string iDButton, Nullable<bool> iDAutorizado, Nullable<double> kilometraje, Nullable<decimal> rPMMotor, Nullable<decimal> consComb, Nullable<decimal> nivelEntradaComb, Nullable<double> temperatura, Nullable<double> voltajeBateria, Nullable<bool> estadoPuerta, Nullable<int> ultimo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iMEIParameter = iMEI != null ?
                new ObjectParameter("IMEI", iMEI) :
                new ObjectParameter("IMEI", typeof(string));
    
            var estadoGPSParameter = estadoGPS.HasValue ?
                new ObjectParameter("EstadoGPS", estadoGPS) :
                new ObjectParameter("EstadoGPS", typeof(int));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("Velocidad", velocidad) :
                new ObjectParameter("Velocidad", typeof(double));
    
            var asimutParameter = asimut.HasValue ?
                new ObjectParameter("Asimut", asimut) :
                new ObjectParameter("Asimut", typeof(double));
    
            var longitudParameter = longitud.HasValue ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(double));
    
            var latitudParameter = latitud.HasValue ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(double));
    
            var altitudParameter = altitud.HasValue ?
                new ObjectParameter("Altitud", altitud) :
                new ObjectParameter("Altitud", typeof(double));
    
            var tipoMensajeParameter = tipoMensaje != null ?
                new ObjectParameter("TipoMensaje", tipoMensaje) :
                new ObjectParameter("TipoMensaje", typeof(string));
    
            var tipoRespuestaParameter = tipoRespuesta != null ?
                new ObjectParameter("TipoRespuesta", tipoRespuesta) :
                new ObjectParameter("TipoRespuesta", typeof(string));
    
            var estadoMotorParameter = estadoMotor.HasValue ?
                new ObjectParameter("EstadoMotor", estadoMotor) :
                new ObjectParameter("EstadoMotor", typeof(int));
    
            var fechaGPSParameter = fechaGPS.HasValue ?
                new ObjectParameter("FechaGPS", fechaGPS) :
                new ObjectParameter("FechaGPS", typeof(System.DateTime));
    
            var fechaEnvioParameter = fechaEnvio.HasValue ?
                new ObjectParameter("FechaEnvio", fechaEnvio) :
                new ObjectParameter("FechaEnvio", typeof(System.DateTime));
    
            var fechaRegParameter = fechaReg.HasValue ?
                new ObjectParameter("FechaReg", fechaReg) :
                new ObjectParameter("FechaReg", typeof(System.DateTime));
    
            var iDButtonParameter = iDButton != null ?
                new ObjectParameter("IDButton", iDButton) :
                new ObjectParameter("IDButton", typeof(string));
    
            var iDAutorizadoParameter = iDAutorizado.HasValue ?
                new ObjectParameter("IDAutorizado", iDAutorizado) :
                new ObjectParameter("IDAutorizado", typeof(bool));
    
            var kilometrajeParameter = kilometraje.HasValue ?
                new ObjectParameter("Kilometraje", kilometraje) :
                new ObjectParameter("Kilometraje", typeof(double));
    
            var rPMMotorParameter = rPMMotor.HasValue ?
                new ObjectParameter("RPMMotor", rPMMotor) :
                new ObjectParameter("RPMMotor", typeof(decimal));
    
            var consCombParameter = consComb.HasValue ?
                new ObjectParameter("ConsComb", consComb) :
                new ObjectParameter("ConsComb", typeof(decimal));
    
            var nivelEntradaCombParameter = nivelEntradaComb.HasValue ?
                new ObjectParameter("NivelEntradaComb", nivelEntradaComb) :
                new ObjectParameter("NivelEntradaComb", typeof(decimal));
    
            var temperaturaParameter = temperatura.HasValue ?
                new ObjectParameter("Temperatura", temperatura) :
                new ObjectParameter("Temperatura", typeof(double));
    
            var voltajeBateriaParameter = voltajeBateria.HasValue ?
                new ObjectParameter("VoltajeBateria", voltajeBateria) :
                new ObjectParameter("VoltajeBateria", typeof(double));
    
            var estadoPuertaParameter = estadoPuerta.HasValue ?
                new ObjectParameter("EstadoPuerta", estadoPuerta) :
                new ObjectParameter("EstadoPuerta", typeof(bool));
    
            var ultimoParameter = ultimo.HasValue ?
                new ObjectParameter("Ultimo", ultimo) :
                new ObjectParameter("Ultimo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Trama2_Insert", iDParameter, iMEIParameter, estadoGPSParameter, velocidadParameter, asimutParameter, longitudParameter, latitudParameter, altitudParameter, tipoMensajeParameter, tipoRespuestaParameter, estadoMotorParameter, fechaGPSParameter, fechaEnvioParameter, fechaRegParameter, iDButtonParameter, iDAutorizadoParameter, kilometrajeParameter, rPMMotorParameter, consCombParameter, nivelEntradaCombParameter, temperaturaParameter, voltajeBateriaParameter, estadoPuertaParameter, ultimoParameter);
        }
    
        public virtual ObjectResult<sp_listarVehculos_Result> sp_listarVehculos(Nullable<int> tipo, string condicion)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var condicionParameter = condicion != null ?
                new ObjectParameter("condicion", condicion) :
                new ObjectParameter("condicion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listarVehculos_Result>("sp_listarVehculos", tipoParameter, condicionParameter);
        }
    }
}
